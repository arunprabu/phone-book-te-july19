You can use the following project as boilerplate project
====
https://github.com/maximegris/angular-electron/tree/angular7




Inside angular project,
    npm install --save-dev electron

Refer this tutorial...
    from there grab the code sectioned under https://electronjs.org/docs/tutorial/first-app#electron-development-in-a-nutshell
    
    here's the code..
main.js -- in root directory create a new file.
===
const path  = require('path');
const url  = require('url');

const { app, BrowserWindow } = require('electron')

let win;

const { session } = require('electron')

function createWindow () {
  // Create the browser window.
  win = new BrowserWindow({
    width: 600, 
    height: 600,
    backgroundColor: '#ffffff',
    icon: `file://${__dirname}/dist/assets/logo.png`
  })


  session.defaultSession.webRequest.onHeadersReceived((details, callback) => {
    callback({
      responseHeaders: {
        ...details.responseHeaders,
        'Content-Security-Policy': ['default-src \'self\'']
      }
    })
  })
  // win.loadURL(`file://${__dirname}/dist/index.html`)
  win.loadURL(url.format({
    pathname: path.join(__dirname, 'dist/phone-book-te-july19/index.html'),
    protocol: 'file:',
    slashes: true
  }))


  //// uncomment below to open the DevTools.
 win.webContents.openDevTools()

  // Event when the window is closed.
  win.on('closed', function () {
    win = null
  })
}

// Create window on electron intialization
app.on('ready', createWindow)

// Quit when all windows are closed.
app.on('window-all-closed', function () {

  // On macOS specific close process
  if (process.platform !== 'darwin') {
    app.quit()
  }
})

app.on('activate', function () {
  // macOS specific close process
  if (win === null) {
    createWindow()
  }
})

// In this file you can include the rest of your app's specific main process
// code. You can also put them in separate files and require them here.

=========

and then in package.json 

 "main": "main.js", // add this line
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "build": "ng build",
    "test": "ng test",
    "lint": "ng lint",
    "e2e": "ng e2e",
    "electron": "electron .", // add this line
    "electron-build": "ng build --prod && electron ."  // add this line
  },

====
then, in command prompt 
>npm run electron-build


===
package it with https://github.com/electron/electron-packager


and then in package.json 

 "main": "main.js", 
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "build": "ng build",
    "test": "ng test",
    "lint": "ng lint",
    "e2e": "ng e2e",
    "electron": "electron .",
    "electron-build": "ng build --prod && electron ."  
    "electron-package": "electron-packager ." // add this line,
  },

then,
  npm run electron-package 

  
Learn more about this...
https://medium.com/@yannmjl/how-to-build-native-cross-platform-desktop-apps-with-angular-electron-bd1d6e3919b2
